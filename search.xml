<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[centos7.2yum安装MySQL5.7]]></title>
    <url>%2Fblog%2F2017%2F11%2F14%2FCentOs7InstMySql%2F</url>
    <content type="text"><![CDATA[安装环境：CentOS7.2 64位 MINI版，安装MySQL5.7 1、配置YUM源 在MySQL官网中下载YUM源rpm安装包： http://dev.mysql.com/downloads/repo/yum/1234 # 下载mysql源安装包shell&gt; wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm # 安装mysql源shell&gt; yum localinstall mysql57-community-release-el7-8.noarch.rpm 检查mysql源是否安装成功1shell&gt; yum repolist enabled | grep &quot;mysql.*-community.*&quot; 看到上图所示表示安装成功 2、安装MySQL1shell&gt; yum install mysql-community-server 3、启动MySQL服务1shell&gt; systemctl start mysqld 查看MySQL的启动状态12345678910shell&gt; systemctl status mysqld● mysqld.service - MySQL Server Loaded: loaded (/usr/lib/systemd/system/mysqld.service; disabled; vendor preset: disabled) Active: active (running) since 五 2016-06-24 04:37:37 CST; 35min ago Main PID: 2888 (mysqld) CGroup: /system.slice/mysqld.service └─2888 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pid6月 24 04:37:36 localhost.localdomain systemd[1]: Starting MySQL Server...6月 24 04:37:37 localhost.localdomain systemd[1]: Started MySQL Server. 4、开机启动12shell&gt; systemctl enable mysqldshell&gt; systemctl daemon-reload 5、修改root默认密码 mysql安装完成之后，在/var/log/mysqld.log文件中给root生成了一个默认密码。通过下面的方式找到root默认密码，然后登录mysql进行修改： 1shell&gt; grep &apos;temporary password&apos; /var/log/mysqld.log 12shell&gt; mysql -uroot -pmysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;; 或者 1mysql&gt; set password for &apos;root&apos;@&apos;localhost&apos;=password(&apos;MyNewPass4!&apos;); 注意：mysql5.7默认安装了密码安全检查插件（validate_password），默认密码检查策略要求密码必须包含：大小写字母、数字和特殊符号，并且长度不能少于8位。否则会提示ERROR 1819 (HY000): Your password does not satisfy the current policy requirements错误，如下图所示： 通过msyql环境变量可以查看密码策略的相关信息：1mysql&gt; show variables like &apos;%password%&apos;; validate_password_policy：密码策略，默认为MEDIUM策略 validate_password_dictionary_file：密码策略文件，策略为STRONG才需要 validate_password_length：密码最少长度 validate_password_mixed_case_count：大小写字符长度，至少1个 validate_password_number_count ：数字至少1个 validate_password_special_char_count：特殊字符至少1个 上述参数是默认策略MEDIUM的密码检查规则。 共有以下几种密码策略：策略检查规则 MySQL官网密码策略详细说明：http://dev.mysql.com/doc/refman/5.7/en/validate-password-options-variables.html#sysvar_validate_password_policy 修改密码策略 在/etc/my.cnf文件添加validate_password_policy配置，指定密码策略123# 选择0（LOW），1（MEDIUM），2（STRONG）其中一种，选择2需要提供密码字典文件validate_password_policy=0 如果不需要密码策略，添加my.cnf文件中添加如下配置禁用即可：1validate_password = off 重新启动mysql服务使配置生效：1systemctl restart mysqld 6、添加远程登录用户 默认只允许root帐户在本地登录，如果要在其它机器上连接mysql，必须修改root允许远程连接，或者添加一个允许远程连接的帐户，为了安全起见，我添加一个新的帐户： 1mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;yangxin&apos;@&apos;%&apos; IDENTIFIED BY &apos;Yangxin0917!&apos; WITH GRANT OPTION; 如果需要root用户登录，则做如下更改：1mysql&gt;GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;youpassword&apos; WITH GRANT OPTION; 重载授权表：1mysql&gt; FLUSH PRIVILEGES; 退出mysql数据库：1mysql&gt; exit 允许root用户在一个特定的IP进行远程登录，并具有所有库特定操作权限，具体操作如下：在本机先使用root用户登录mysql：mysql -u root -p”youpassword”进行授权操作：GRANT select，insert，update，delete ON . TO root@”172.16.16.152” IDENTIFIED BY “youpassword”;重载授权表：FLUSH PRIVILEGES;退出mysql数据库：exit 允许root用户在一个特定的IP进行远程登录，并具有所有库任何操作权限，具体操作如下：在本机先使用root用户登录mysql：mysql -u root -p”youpassword”进行授权操作：GRANT ALL PRIVILEGES ON . TO root@”172.16.16.152” IDENTIFIED BY “youpassword” WITH GRANT OPTION;重载授权表：FLUSH PRIVILEGES;退出mysql数据库：exit 删除用户授权，需要使用REVOKE命令，具体命令格式为：REVOKE privileges ON 数据库[.表名] FROM user-name;具体实例，先在本机登录mysql:mysql -u root -p”youpassword”进行授权操作：GRANT select，insert，update，delete ON TEST-DB TO test-user@”172.16.16.152” IDENTIFIED BY “youpassword”;再进行删除授权操作：REVOKE all on TEST-DB from test-user;**注：该操作只是清除了用户对于TEST-DB的相关授权权限，但是这个“test-user”这个用户还是存在。最后从用户表内清除用户：DELETE FROM user WHERE user=”test-user”;重载授权表：FLUSH PRIVILEGES;退出mysql数据库：exit MYSQL权限详细分类：全局管理权限：FILE: 在MySQL服务器上读写文件。PROCESS: 显示或杀死属于其它用户的服务线程。RELOAD: 重载访问控制表，刷新日志等。SHUTDOWN: 关闭MySQL服务。数据库/数据表/数据列权限：ALTER: 修改已存在的数据表(例如增加/删除列)和索引。CREATE: 建立新的数据库或数据表。DELETE: 删除表的记录。DROP: 删除数据表或数据库。INDEX: 建立或删除索引。INSERT: 增加表的记录。SELECT: 显示/搜索表的记录。UPDATE: 修改表中已存在的记录。特别的权限：ALL: 允许做任何事(和root一样)。USAGE: 只允许登录–其它什么也不允许做。 7、配置默认编码为utf8 修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，如下所示： 123[mysqld]character_set_server=utf8init_connect=&apos;SET NAMES utf8&apos; 重新启动mysql服务，查看数据库默认编码如下所示： 默认配置文件路径： 配置文件：/etc/my.cnf 日志文件：/var/log//var/log/mysqld.log 服务启动脚本：/usr/lib/systemd/system/mysqld.service socket文件：/var/run/mysqld/mysqld.pid 本文由 cqzx 创作 本站文章除注明转载/出处外，均为本站原创或翻译，转载前请务必署名]]></content>
      <categories>
        <category>技术</category>
        <category>linux</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>linux</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[eclipse中启动项目报内存溢出问题通过修改配置解决]]></title>
    <url>%2Fblog%2F2017%2F11%2F13%2FeclipseMemory%2F</url>
    <content type="text"><![CDATA[先停止运行，双击图片中的指定位置，显示具体配置页面。 点击图片中链接 在&ldquo;arguments&rdquo;标签卡中对&ldquo;VM arguments&rdquo;进行配置，在第一行添加-Xms256M -Xmx1024M -XX:PermSize=64M -XX:MaxPermSize=128M 点击&ldquo;apply&rdquo;按钮。Tomcat停止运行才可以修改。 本文由 cqzx 创作 本站文章除注明转载/出处外，均为本站原创或翻译，转载前请务必署名]]></content>
      <categories>
        <category>技术</category>
        <category>语言</category>
        <category>java</category>
        <category>eclipse</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>语言</tag>
        <tag>java</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git提交项目到github]]></title>
    <url>%2Fblog%2F2017%2F11%2F13%2FgitToGitHub%2F</url>
    <content type="text"><![CDATA[首先你需要一个github账号，所有还没有的话先去注册吧！ https://github.com/ 我们使用git需要先安装git工具，这里给出下载地址，下载后一路直接安装即可： https://git-for-windows.github.io/1.进入Github首页，点击New repository新建一个项目 &nbsp;2.填写相应信息后点击create即可 Repository name: 仓库名称 Description(可选): 仓库描述介绍 Public,&nbsp;Private&nbsp;: 仓库权限（公开共享，私有或指定合作者） Initialize this repository with a README: 添加一个README.md gitignore: 不需要进行版本管理的仓库类型，对应生成文件.gitignore license: 证书类型，对应生成文件LICENSE 4.点击Clone or dowload会出现一个地址，copy这个地址备用。 5.接下来就到本地操作了，首先右键你的项目，如果你之前安装git成功的话，右键会出现两个新选项，分别为Git Gui Here,Git Bash Here,这里我们选择Git Bash Here，进入如下界面，Test_Bluetooth即为我的项目名。 6.接下来输入如下代码（关键步骤），把github上面的仓库克隆到本地 git clone 你之前复制的地址 如下: &nbsp;7.这个步骤以后你的本地项目文件夹下面就会多出个文件夹，该文件夹名即为你github上面的项目名，如图我多出了个Test文件夹，我们把本地项目文件夹下的所有文件（除了新多出的那个文件夹不用），其余都复制到那个新多出的文件夹下， 8.接着继续输入命令 cd Test，进入Test文件夹 9.接下来依次输入以下代码即可完成其他剩余操作： git add . （注：别忘记后面的.，此操作是把Test文件夹下面的文件都添加进来） git commit &nbsp;-m &nbsp;”提交信息” （注：&ldquo;提交信息&rdquo;里面换成你需要，如&ldquo;first commit&rdquo;） git push -u origin master &nbsp; （注：此操作目的是把本地仓库push到github上面，此步骤需要你输入帐号和密码） 本文由 cqzx 创作 本站文章除注明转载/出处外，均为本站原创或翻译，转载前请务必署名]]></content>
  </entry>
  <entry>
    <title><![CDATA[个人博客搭建(GitHub+Hexo)]]></title>
    <url>%2Fblog%2F2017%2F11%2F13%2FowbBlog%2F</url>
    <content type="text"><![CDATA[一、技术选型常见个人博客搭建方案搭建个人博客通常有如下选择： WorkPress： WorkPress GitHubPages + Jekyll： GitHubPages+Jekyll GitHubPages + Hexo： GitHubPages+Hexo 选择 GitHubPages + Hexo上面提到的三种个人博客搭建方案，在对这三个方案做了简单的了解之后，我选择了 GitHubPages + Hexo。主要是出于以下几点考虑： WorkPress：一般需要独立域名（收费），对 MarkDown 不友好 GitHubPages + Jekell：免费，稍微有点麻烦 GitHubPages + Hexo：免费，使用简单，使用者众多… Hexo 简介Hexo 是一个基于 Nodejs 的静态博客网站生成器，作者是来自台湾的 Tommy Chen(https://zespia.tw/) 特点： 不可思议的快速 ─ 只要一眨眼静态文件即生成完成 支持 Markdown 仅需一道指令即可部署到 GitHub Pages 和 Heroku 已移植 Octopress 插件 高扩展性、自订性 兼容于 Windows, Mac &amp; Linux 二、博客搭建跟着我做，简简单单5-7分钟你即可拥有自己的个人博客。开始吧！ 创建 GitHub 仓库注册/登录如果没有帐号，前往 GitHub 页面完成注册： 用户名 邮箱地址 密码 Create an account 登录如果有账号，前往 GitHub 页面登录： 用户名或邮箱地址 密码 Sign in 创建仓库直接看图操作： 创建仓库：步骤一创建仓库：步骤二 ”步骤二“中，注意 Respository name 中一定要输入：你的用户名.github.io。其他地方不用修改，然后直接点 ”Create repository“ 按钮完成创建即可。 本地环境准备Git 安装Windows 中1、下载 Git打开 Git 官网，选择 Downloads 下面的 Windows（按照你的系统选择 32 位或者 64 位）。考虑到可能受网络环境影响，我已经把 Git 上传到网盘分享出来了，点这里去网盘。 2、安装 Git双击安装文件 -&gt; 下一步 -&gt; 下一步…没有特殊要求的直接下一步即可，不用去修改默认选项。 Mac OS 中话说 Mac 上的 XCode 自带了 Git。（汗！没装 XCode 怎么破）1、下载 Git打开 Git 官网，选择 Downloads 下面的 Mac OS X。Mac版的 Git 也上传到网盘分享出来了，点这里去网盘。2、安装 Git直接双击 dmg 文件安装即可。 Nodejs安装Windows 中1、下载 Nodejs打开 Nodejs 下载页面，选择合适你当前系统版本的安装包。这里建议使用 LTS 版本的，当前的是 v4.4.3。我已经把 Windows 32/64 位的安装包都提交到网盘了，你可以直接从网盘下载，点这里去网盘。 2、安装 Nodejs双击安装文件 -&gt; 下一步 -&gt; 下一步… Mac OS 中1、下载 Nodejs打开 Nodejs 下载页面，选择 Macintosh Installer 即可开始下载。网盘里面也上传了，点这里去网盘。 2、安装 Nodejs直接双击 pkg 文件安装即可。 说明： Nodejs 也可以使用 nvm（Nodejs版本管理器）来安装，步骤如下：1、安装 nvm 通过 brew 安装 12345$ brew install nvm$ mkdir ~/.nvm$ export NVM_DIR=~/.nvm$ . $(brew --prefix nvm)/nvm.sh$ source ~/.nvm/nvm.sh // 使配置生效 使用 curl 安装 12$ curl [https://raw.github.com/creationix/nvm/master/install.sh](https://raw.github.com/creationix/nvm/master/install.sh) | sh$ source ~/.nvm/nvm.sh // 使配置生效 2、安装 Nodejs 41$ nvm install 4 Hexo 安装Hexo 是今天的主角，先打开 Hexo 官网。 Hexo官网 对，如上图所示，就一条命令，很简单有没有。 Windows 中1、打开命令行win+R，输入 cmd，回车 2、输入命令1npm install hexo-cli -g Mac OS 中1、打开终端不要问我终端在哪里… 2、输入命令1$ npm install hexo-cli -g 创建本地博客Windows 中1、打开命令行，定位到你希望放置博客的位置 定位到目标目录 2、输入命令1hexo init 你的用户名.github.io // 建议和创建仓库时使用同一个 Mac OS 中1、打开终端，定位到你希望放置博客的位置 Mac上定位到指定目录 2、输入命令1$ hexo init 你的用户名.github.io // 建议和创建仓库时使用同一个 Next 安装经过上面步骤创建完本地博客之后，基本的博客系统就已经搭建好了，自带了 landscape 主题。不过该主题不是很符合我的审美，在网上搜索了一下 Hexo 主题，选择了用户量较大的 Next。 Next 是 iissnan 在 GitHub 上开源的一个 Hexo 主题，主打简洁。选择该主题有如下原因： 简洁，美观 功能齐全 使用者众多 文档齐全 ”说明：“在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下（即 xxx.github.io 目录下），主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置有主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为 “站点配置文件”， 后者称为 “主题配置文件”。 看下怎么安装主题： 1、切换到上面生成的本地博客目录（xxx.github.io） 切换到本地博客目录 Mac OS 的终端上类似，把 dir 替换为 ls 即可。 2、安装 Next 主题1git clone https://github.com/iissnan/hexo-theme-next themes/next 或在 Mac 上1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 3、使用 Next 主题首先，复制一份打开本地博客目录下的 _config.yml 文件，命名为 _config_bak.yml，做为备份，以防改错然后，使用文本编辑器打开本地博客目录下的 _config.yml 文件，搜索，定位 theme 键值，将 theme 的值修改为 next1theme: next //刚刚安装的主题名称 注意：该配置文件中的键值之间一定要有空格，否则轻则没有作用，重则报错，无法启动。 4、站点配置文件基本项修改关于 Hexo 配置的详细信息请前往 Hexo的官方文档。 这里先看看最基础的配置，也就是必须要改动的： title: xxx # 博客的名字，也称站点名称 author: xxx # 作者名字 description: xxx # 对站点的描述，搜索引擎会抓取，可以自定义（这个还是加上比较好） language: zh-Hans # 语言 简体中文 theme: next # 配置主题 deploy: # 部署相关配置 type: git # 使用 Git 提交 repo: https://github.com/xxx/xxx.github.io.git # 就是存放博客的仓库地址 上述配置是必须要修改的，再次强调，键值之间一定要 ”加空格“，请在文本编辑器中搜索定位后再修改。 站点配置文件详细配置示例 # Hexo Configuration ## Docs: https://hexo.io/docs/configuration.html ## Source: https://github.com/hexojs/hexo/ # Site 这里的配置，哪项配置反映在哪里，可以参考我的博客 title: xxx # 博客的名字，也称站点名称 subtitle: xxx # 副标题 description: xxx # 对站点的描述，搜索引擎会抓取，可以自定义 author: xxx # 作者名字 language: zh-Hans # 语言 简体中文 timezone: # 用默认的即可 # URL # 这项暂时不需要配置，绑定域名后，要创建 sitemap.xml 时再配置该项 ## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos; url: # http://xxx.com root: / permalink: :year/:month/:day/:title/ permalink_defaults: # Directory # 目录，不要修改 source_dir: source public_dir: public tag_dir: tags archive_dir: archives category_dir: categories code_dir: downloads/code i18n_dir: :lang skip_render: # Writing # 文章布局、写作格式的定义，不修改 new_post_name: :title.md # File name of new posts default_layout: post titlecase: false # Transform title into titlecase external_link: true # Open external links in new tab filename_case: 0 render_drafts: false post_asset_folder: false relative_link: false future: true highlight: enable: true line_number: true auto_detect: false tab_replace: # Category &amp;amp; Tag default_category: uncategorized category_map: tag_map: # Date / Time format # 日期 / 时间 格式，不要修改 ## Hexo uses Moment.js to parse and display date ## You can customize the date format as defined in ## http://momentjs.com/docs/#/displaying/format/ date_format: MMM D YYYY time_format: H:mm:ss # Pagination # 每页显示文章数，可以自定义 ## Set per_page to 0 to disable pagination per_page: 10 pagination_dir: page # Extensions # 配置站点所用主题和插件，这里将默认主题注释，修改为 next ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next #theme: landscape # 头像 # 注意：是 xxx.github.io/source 下的开始的相对路径，如果 source 文件夹下面没有 uploads 文件夹，那么新建一个。考虑到会博客中用很多图片，在 uploads 文件夹下请分好类，避免混乱 avatar: /uploads/images/avatar.jpg # Deployment # 本地博客部署到 github 上要配置这里 ## Docs: https://hexo.io/docs/deployment.html deploy: type: git # 使用 Git 提交 repository: https://github.com/xxx/xxx.github.io.git # 就是存放博客的仓库地址 PS：是不是有点迫不及待想看看效果了，那好，先在本地跑起来试试，步骤如下： 打开命令行，定位到 xxx.github.io 目录 输入命令： 1$ hexo s -p 4000 #默认启动4000端口 启动成功可以看到提示，按照提示用浏览器打开提示网址，即可看到你的本地博客了，里面有一篇 Hello World hexo s 命令成功提示 看完效果之后继续学习下面的内容… 三、Next 配置当然，最权威的是看官方的说明文档，我在这里提供一个示例，供大家参考，你可以直接拷过去稍微改动一点就行。 Next 配置详解Next 配置就是上面所说的”主题配置文件“，位于 xxx.github.io/themes/next 目录下，文件名为 _config.yml。老规矩，先备份一份 ”_config_bak.yml“，以防改错。 以我的博客为例，阐述一下需要配置的地方： # Set default keywords (Use a comma to separate) # 设置关键字 keywords: &quot;Android, DIY&quot; # Specify the date when the site was setup # 设置博客开始时间 since: 2016 # When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&amp;gt; archives) # 设置菜单，就是[我的博客](http://diy-green.github.io)左侧那一列 menu: home: / # 在菜单上显示首页 archives: /archives # 在菜单删显示全部 categories: /categories # 在菜单上显示 分类 tags: /tags # 在菜单上显示 标签 about: /about # 在菜单上显示 关于 #commonweal: /404.html # Schemes # 设置风格 #scheme: Muse #scheme: Mist scheme: Pisces # 我的就是这个双栏风格 # Automatically Excerpt. Not recommand. # Please use &amp;lt;!-- more --&amp;gt; in the post to control excerpt accurately. auto_excerpt: enable: true # 设置是否显示阅读全文，文章较多的话，有必要设置为 true length: 150 # 一些第三方服务设置，这里只提一下”多说“，其他的请参考官方介绍 # Make duoshuo show UA # user_id must NOT be null when admin_enable is true! # you can visit http://dev.duoshuo.com get duoshuo user id. duoshuo_info: ua_enable: true admin_enable: true user_id: 0 # **这里不要动，千万别动** admin_nickname: DIY-green # Code Highlight theme # Available value: # normal | night | night eighties | night blue | night bright # https://github.com/chriskempson/tomorrow-theme #highlight_theme: normal # 代码高亮主题 highlight_theme: night eighties # 打赏配置 # 打赏说明文本 reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！ # 微信收款二维码 wechatpay: /uploads/images/wechat-reward-image.png # 支付宝收款二维码 alipay: /uploads/images/alipay-reward-image.png # 友情链接 links_title: Links links: DIY-green简书: http://www.jianshu.com/users/0ad0a0afc409/latest_articles # 订阅微信公众号 # Wechat Subscriber #wechat_subscriber: # enabled: true # qcode: /uploads/wechat-qcode.jpg # description: 欢迎您扫一扫上面的微信公众号，订阅我的博客！ 创建分类页面先看下添加了分类的效果： 分类页面效果 操作步骤 打开命令行，定位到 xxx.github.io 目录 新建一个页面，命名为 categories 1hexo new page categories 或 1$ hexo new page categories 根据提示找到新建的 index.md 文件，编辑 12345#这里有 &quot;---&quot;（这会破坏代码展示效果，所以注释了）title: All tags date: 2016-04-25 11:45:45type: &quot;categories&quot; # 将页面的类型设置为 categories,主题将自动为这个页面显示所有分类comments: false # 如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，设置为 false#这里也有 &quot;---&quot; 创建标签云页面先看下添加了标签云的效果： 标签云页面效果 操作步骤 打开命令行，定位到 xxx.github.io 目录 新建一个页面，命名为 tags 1hexo new page &quot;tags&quot; 或 1$ hexo new page &quot;tags&quot; 根据提示找到新建的 index.md 文件，编辑 12345#这里有&quot;---&quot;title: All tags date: 2016-04-27 08:56:40type: &quot;tags&quot; # 将页面的类型设置为 tags,主题将自动为这个页面显示标签云comments: false # 如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，设置为 false#这里也有 &quot;---&quot; 注意事项 格式:再次强调，设置项的键值之间一定要有空格 菜单上显示 ”分类“ 等栏目如果需要在菜单上显示 ”分类“ 和 ”标签“ 等，那么记得打开注释，或者添加该条目 分类和标签云页面首先，要使用 1hexo new page 命令生成这两个页面，否则报404。 其次，这两个页面是主题自动维护的，只要我们的文章按照规矩来就行了，下面会详细说明 四、写博客与发布经过上述步骤，本地博客和主题设置已经完成，那么接下来就是写博客了。 你的博客文件需要存放到 xxx.github.io/source/_posts 文件夹中，在该文件夹下面你可以按照你的博客分类建立一系列的文件夹来管理博客原文件。 操作步骤1、用 Markdown 写文章不管你用什么编辑 Markdown 文件，最后生成的 md 文件放到 xxx.github.io/source/_posts 文件夹或其子文件夹中即可，如：123456789--- title: 个人博客搭建详解（Windows和Mac通用版） # 这是标题 categories: # 这里写的分类会自动汇集到 categories 页面上，分类可以多级 - 实用技术 # 一级分类 - 个人博客 # 二级分类 tags: # 这里写的标签会自动汇集到 tags 页面上 - 实用 # 可配置多个标签，注意格式 - 个人博客--- Hexo 是一个基于nodejs 的静态博客网站生成器，作者是来自台湾的 Tommy Chen` 注意：分类和标签是自动维护的，关键是的文章要按照规定的格式写，如上格式，可以参考。 说明：Next 主题会自动生成目录，这也省了不少事。 2、在本地运行测试打开命令行定位到 xxx.github.io 目录，输入命令：1hexo s # 这是简写 == hexo server # 启动服务预览 或1$ hexo s`&lt;/pre&gt; 3、在浏览器查看效果在浏览器中输入 http://localhost:4000 访问本地博客，看看效果吧 4、安装自动部署发布工具这里用到了 hexo-deployer-git，使用如下命令安装：1npm install hexo-deployer-git --save 或1$ npm install hexo-deployer-git --save 5、发布到 GitHubPages确认在本地上显示无误之后，就可以将 md 转为 静态网页文件，然后发布到 GitHubPages 上去了。123hexo clean #清除缓存 网页正常情况下可以忽略此条命令hexo g #生成静态网页hexo d #开始部署 也可以一次性执行1hexo clean &amp;amp;&amp;amp; hexo g &amp;amp;&amp;amp; hexo d 如果是第一次部署，终端会提示要求输入用户名和密码。等命令执行完之后，过几分钟打开 http://xxx.github.io 即可看到你的个人博客了。以后要发布新文章，执行上述命令即可。 注意事项 Git 的 bug有个老版本的 Git 有个 bug，上传的时候会提示非法域名这类的，要解决该问题，最简单的方法就是更新 Git，用最新版的 Git 关于页面空白主题配置文件中的 ”duoshuo_info“ 下的 ”user_id“ 如果是非 ”0“，会导致该问题 Hexo 命令的常见报错可以参考这篇文章：HEXO+Github,搭建属于自己的博客 使用hexo，如果换了电脑怎么更新博客？这个问题相信大家都关心，知乎上有比较详细的解答。我说一下我的解决方法吧！方案一：在新电脑上配置好本地博客环境，然后，直接拷贝原电脑上的 xxx.github.io 文件夹到新电脑上即可。方案二：将 xxx.github.io 文件夹同步到网上(如：Dropbox 等)，其他任何电脑（配置好了本地博客环境）要用的时候，从网上同步下来即可。 五、更多资源Markdown 编辑器 Windows 上推荐：HaroopadSmarkMarkdownPad Mac OS 上推荐：Mou)* 在线资源推荐：简书作业部落马克飞象 Markdown语法参考Markdown 语法说明(简体中文版)Markdown——入门指南markdown写作中的常见问题 提示：更简单的学习方法上是直接用示例修改，可参考：作业部落 或者马克飞象 的示例文稿。 思维导图 Windows 上推荐：Mindjet Mac OS 上推荐：XMind 在线资源推荐：ProcessOn百度脑图MINDPIN Hexo 相关资料Hexo官网hexo常用命令笔记 Next 相关资料hexo-theme-nextNext 使用文档 更多主题Hexo Themes有哪些好看的 Hexo 主题？ 绑定顶级域名GitHub Pages绑定顶级域名的方法怎样将域名绑定到github pages 博客上 第三方服务站长工具百度站长工具站长之家工具360云监控 数据统计百度统计不蒜子 说明更多的配置可以去看看官方文档，我对我的博客目前的效果已经比较满意。我觉得简洁就是美，我们应该专注内容。更多的设置以及喜欢折腾的朋友自己去百度、Google 吧！ 我的个人博客苍穹之下我的GitHub 参考DIY-green 本文由 cqzx 创作 本站文章除注明转载/出处外，均为本站原创或翻译，转载前请务必署名]]></content>
      <categories>
        <category>技术</category>
        <category>git</category>
        <category>github&amp;hexo</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>git</tag>
        <tag>github</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建属于自己的科学代理服务器]]></title>
    <url>%2Fblog%2F2017%2F11%2F09%2FproxyServer%2F</url>
    <content type="text"><![CDATA[本文采用Ubuntu17.04 64位操作系统搭建科学上网服务器 前提搭建自己的翻墙代理首先得需要有自己的服务器，既然翻墙所以服务器尽量选择国外的，本人使用的是Vultr服务器，好处是一旦被封了，可以销毁服务重新创建，点击链接地址，使用此链接地址，首次充值新用户可以得到额外10美元奖励，够你玩几个月。好了，闲话少说进入正题： 第一步：安装GCC 及pip依次执行以下命令： 123apt-get update apt-get install build-essentialapt-get install python-pip 为了在安装代理的时候出现版本问题错误，执行完以上命令，再执行： 1pip install --upgrade setuptools 第二步：安装Python首先得保证你的服务器上有Python，且Python版本为2.6或者2.7，如果你服务器已经安装有Python，可使用命令：python –version 查看Python版本 如下图： 本人使用的是Python2.7.11，如果符合条件，可略过以下安装步骤： （1）、下载Python安装包在python 官网上下载2.7 版本的source code 。传送门 下载完成后，是一个Python-2.7.11.tar.xz； （2）、上传Python-2.7.11.tgz将Python-2.7.11.tar.xz 上传到你服务器某一目录如：/usr/local/shadowsocket/，当然在终端用wget下载，可省略此步骤； （3）、解压Python-2.7.11.tgz执行以下命令： 1tar -xvf Python-2.7.11.tar.xz （4）、进入解压目录，依次执行以下命令：123./configuremake make install （5）、以上步骤执行完，验证是否安装成功：执行： 1python –version 得到Python的版本号则为成功,完成第二步; 第三步：安装shadowsocks代理（1）、安装shadowsocks执行以下命令： 1pip install shadowsocks 配置单用户或者多用户，编写json文件执行以下命令： 1vim /etc/shadowsocks.json 单用户配置： 12345678910&#123; &quot;server&quot;:&quot;你的服务器IP&quot;, &quot;server_port&quot;:8388, &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;设置密码&quot;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;fast_open&quot;: false&#125; 本文不做多用户配置说明，有兴趣的可以自行google。 （3）、安装m2crypto安装m2crypto可以加快一点加密速度，执行： 1apt-get install python-m2crypto （4）、启动服务前台执行命令： 1ssserver -c /etc/shadowsocks.json 后台启动/停止命令： 12ssserver -c /etc/shadowsocks.json -d startssserver -c /etc/shadowsocks.json -d stop 启动后，你就可以科学上网了。 第四步：配置加速器将在之后博文中说明。 由于工作需要，爬墙是必须的，但请勿作他用，不参与黄赌毒，不发表不正当言论，请自重！ 本文由 tfss创作本站文章除注明转载/出处外，均为本站原创或翻译，转载前请务必署名]]></content>
      <categories>
        <category>vpn</category>
        <category>翻墙</category>
        <category>科学上网</category>
      </categories>
      <tags>
        <tag>vpn</tag>
        <tag>翻墙</tag>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[配置科学上网加速器]]></title>
    <url>%2Fblog%2F2017%2F06%2F01%2FinternetBooster%2F</url>
    <content type="text"><![CDATA[##配置科学上网加速器 本文默认配置在了/root/kcptun/目录，所以下载的传送门kcptun-linux-amd64-20160922.tar.gz（可以用别的版本）也放到了这个目录，可自行更改。 首先创建启动脚本 start.sh： 1234#!/bin/bashcd /root/kcptun/./server_linux_amd64 -c /root/kcptun/server-config.json &gt; kcptun.log 2&gt;&amp;1 &amp;echo &quot;Kcptun started.&quot; 创建停止脚本：stop.sh: 12345678#!/bin/bashecho &quot;Stopping Kcptun...&quot;PID=`ps -ef | grep server_linux_amd64 | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`if [ &quot;&quot; != &quot;$PID&quot; ]; then echo &quot;killing $PID&quot; kill -9 $PID fi echo &quot;Kcptun stoped.&quot; 创建重启脚本restart.sh: 12345#!/bin/bashcd /root/kcptun/sh stop.shecho &quot;Restarting Kcptun...&quot;sh start.sh 创建号以上三个脚本后，就可以创建配置文件server-config.json了： 123456789101112131415161718192021&#123; &quot;listen&quot;: &quot;:29900&quot;, &quot;target&quot;: &quot;127.0.0.1:8380&quot;, &quot;key&quot;: &quot;test&quot;, &quot;crypt&quot;: &quot;salsa20&quot;, &quot;mode&quot;: &quot;fast2&quot;, &quot;mtu&quot;: 1350, &quot;sndwnd&quot;: 1024, &quot;rcvwnd&quot;: 1024, &quot;datashard&quot;: 70, &quot;parityshard&quot;: 30, &quot;dscp&quot;: 46, &quot;nocomp&quot;: false, &quot;acknodelay&quot;: false, &quot;nodelay&quot;: 0, &quot;interval&quot;: 40, &quot;resend&quot;: 0, &quot;nc&quot;: 0, &quot;sockbuf&quot;: 4194304, &quot;keepalive&quot;: 10&#125; 以上就是配置科学上网加速器的全过程，相当简单。不清楚的地方，可以在博文下面留言。 本文由 tfss 创作 本站文章除注明转载/出处外，均为本站原创或翻译，转载前请务必署名]]></content>
      <categories>
        <category>vpn</category>
        <category>翻墙</category>
        <category>科学上网</category>
        <category>加速器</category>
      </categories>
      <tags>
        <tag>vpn</tag>
        <tag>翻墙</tag>
        <tag>科学上网</tag>
        <tag>加速器</tag>
      </tags>
  </entry>
</search>
